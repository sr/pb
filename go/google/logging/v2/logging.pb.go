// Code generated by protoc-gen-go.
// source: google/logging/v2/logging.proto
// DO NOT EDIT!

package google_logging_v2

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gengo/grpc-gateway/third_party/googleapis/google/api"
import google_api3 "go.pedge.io/pb/go/google/api"
import _ "go.pedge.io/pb/go/google/protobuf"
import _ "go.pedge.io/pb/go/google/rpc"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// The parameters to DeleteLog.
type DeleteLogRequest struct {
	// Required. The resource name of the log to delete.  Example:
	// `"projects/my-project/logs/syslog"`.
	LogName string `protobuf:"bytes,1,opt,name=log_name" json:"log_name,omitempty"`
}

func (m *DeleteLogRequest) Reset()                    { *m = DeleteLogRequest{} }
func (m *DeleteLogRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteLogRequest) ProtoMessage()               {}
func (*DeleteLogRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

// The parameters to WriteLogEntries.
type WriteLogEntriesRequest struct {
	// Optional. A default log resource name for those log entries in `entries`
	// that do not specify their own `logName`.  Example:
	// `"projects/my-project/logs/syslog"`.  See
	// [LogEntry][google.logging.v2.LogEntry].
	LogName string `protobuf:"bytes,1,opt,name=log_name" json:"log_name,omitempty"`
	// Optional. A default monitored resource for those log entries in `entries`
	// that do not specify their own `resource`.
	Resource *google_api3.MonitoredResource `protobuf:"bytes,2,opt,name=resource" json:"resource,omitempty"`
	// Optional. User-defined `key:value` items that are added to
	// the `labels` field of each log entry in `entries`, except when a log
	// entry specifies its own `key:value` item with the same key.
	// Example: `{ "size": "large", "color":"red" }`
	Labels map[string]string `protobuf:"bytes,3,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Required. The log entries to write. The log entries must have values for
	// all required fields.
	Entries []*LogEntry `protobuf:"bytes,4,rep,name=entries" json:"entries,omitempty"`
}

func (m *WriteLogEntriesRequest) Reset()                    { *m = WriteLogEntriesRequest{} }
func (m *WriteLogEntriesRequest) String() string            { return proto.CompactTextString(m) }
func (*WriteLogEntriesRequest) ProtoMessage()               {}
func (*WriteLogEntriesRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *WriteLogEntriesRequest) GetResource() *google_api3.MonitoredResource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *WriteLogEntriesRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *WriteLogEntriesRequest) GetEntries() []*LogEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

// Result returned from WriteLogEntries.
type WriteLogEntriesResponse struct {
}

func (m *WriteLogEntriesResponse) Reset()                    { *m = WriteLogEntriesResponse{} }
func (m *WriteLogEntriesResponse) String() string            { return proto.CompactTextString(m) }
func (*WriteLogEntriesResponse) ProtoMessage()               {}
func (*WriteLogEntriesResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

// The parameters to `ListLogEntries`.
type ListLogEntriesRequest struct {
	// Required. One or more project IDs or project numbers from which to retrieve
	// log entries.  Examples of a project ID: `"my-project-1A"`, `"1234567890"`.
	ProjectIds []string `protobuf:"bytes,1,rep,name=project_ids" json:"project_ids,omitempty"`
	// Optional. An [advanced logs filter](/logging/docs/view/advanced_filters).
	// The filter is compared against all log entries in the projects specified by
	// `projectIds`.  Only entries that match the filter are retrieved.  An empty
	// filter matches all log entries.
	Filter string `protobuf:"bytes,2,opt,name=filter" json:"filter,omitempty"`
	// Optional. How the results should be sorted.  Presently, the only permitted
	// values are `"timestamp"` (default) and `"timestamp desc"`.  The first
	// option returns entries in order of increasing values of
	// `LogEntry.timestamp` (oldest first), and the second option returns entries
	// in order of decreasing timestamps (newest first).  Entries with equal
	// timestamps are returned in order of `LogEntry.insertId`.
	OrderBy string `protobuf:"bytes,3,opt,name=order_by" json:"order_by,omitempty"`
	// Optional. The maximum number of results to return from this request.  Fewer
	// results might be returned. You must check for the `nextPageToken` result to
	// determine if additional results are available, which you can retrieve by
	// passing the `nextPageToken` value in the `pageToken` parameter to the next
	// request.
	PageSize int32 `protobuf:"varint,4,opt,name=page_size" json:"page_size,omitempty"`
	// Optional. If the `pageToken` request parameter is supplied, then the next
	// page of results in the set are retrieved.  The `pageToken` parameter must
	// be set with the value of the `nextPageToken` result parameter from the
	// previous request.  The values of `projectIds`, `filter`, and `orderBy` must
	// be the same as in the previous request.
	PageToken string `protobuf:"bytes,5,opt,name=page_token" json:"page_token,omitempty"`
}

func (m *ListLogEntriesRequest) Reset()                    { *m = ListLogEntriesRequest{} }
func (m *ListLogEntriesRequest) String() string            { return proto.CompactTextString(m) }
func (*ListLogEntriesRequest) ProtoMessage()               {}
func (*ListLogEntriesRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

// Result returned from `ListLogEntries`.
type ListLogEntriesResponse struct {
	// A list of log entries.
	Entries []*LogEntry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
	// If there are more results than were returned, then `nextPageToken` is
	// given a value in the response.  To get the next batch of results, call
	// this method again using the value of `nextPageToken` as `pageToken`.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token" json:"next_page_token,omitempty"`
}

func (m *ListLogEntriesResponse) Reset()                    { *m = ListLogEntriesResponse{} }
func (m *ListLogEntriesResponse) String() string            { return proto.CompactTextString(m) }
func (*ListLogEntriesResponse) ProtoMessage()               {}
func (*ListLogEntriesResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *ListLogEntriesResponse) GetEntries() []*LogEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

// The parameters to ListMonitoredResourceDescriptors
type ListMonitoredResourceDescriptorsRequest struct {
	// Optional. The maximum number of results to return from this request.  Fewer
	// results might be returned. You must check for the `nextPageToken` result to
	// determine if additional results are available, which you can retrieve by
	// passing the `nextPageToken` value in the `pageToken` parameter to the next
	// request.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size" json:"page_size,omitempty"`
	// Optional. If the `pageToken` request parameter is supplied, then the next
	// page of results in the set are retrieved.  The `pageToken` parameter must
	// be set with the value of the `nextPageToken` result parameter from the
	// previous request.
	PageToken string `protobuf:"bytes,2,opt,name=page_token" json:"page_token,omitempty"`
}

func (m *ListMonitoredResourceDescriptorsRequest) Reset() {
	*m = ListMonitoredResourceDescriptorsRequest{}
}
func (m *ListMonitoredResourceDescriptorsRequest) String() string { return proto.CompactTextString(m) }
func (*ListMonitoredResourceDescriptorsRequest) ProtoMessage()    {}
func (*ListMonitoredResourceDescriptorsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{5}
}

// Result returned from ListMonitoredResourceDescriptors.
type ListMonitoredResourceDescriptorsResponse struct {
	// A list of resource descriptors.
	ResourceDescriptors []*google_api3.MonitoredResourceDescriptor `protobuf:"bytes,1,rep,name=resource_descriptors" json:"resource_descriptors,omitempty"`
	// If there are more results than were returned, then `nextPageToken` is
	// returned in the response.  To get the next batch of results, call this
	// method again using the value of `nextPageToken` as `pageToken`.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token" json:"next_page_token,omitempty"`
}

func (m *ListMonitoredResourceDescriptorsResponse) Reset() {
	*m = ListMonitoredResourceDescriptorsResponse{}
}
func (m *ListMonitoredResourceDescriptorsResponse) String() string { return proto.CompactTextString(m) }
func (*ListMonitoredResourceDescriptorsResponse) ProtoMessage()    {}
func (*ListMonitoredResourceDescriptorsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{6}
}

func (m *ListMonitoredResourceDescriptorsResponse) GetResourceDescriptors() []*google_api3.MonitoredResourceDescriptor {
	if m != nil {
		return m.ResourceDescriptors
	}
	return nil
}

func init() {
	proto.RegisterType((*DeleteLogRequest)(nil), "google.logging.v2.DeleteLogRequest")
	proto.RegisterType((*WriteLogEntriesRequest)(nil), "google.logging.v2.WriteLogEntriesRequest")
	proto.RegisterType((*WriteLogEntriesResponse)(nil), "google.logging.v2.WriteLogEntriesResponse")
	proto.RegisterType((*ListLogEntriesRequest)(nil), "google.logging.v2.ListLogEntriesRequest")
	proto.RegisterType((*ListLogEntriesResponse)(nil), "google.logging.v2.ListLogEntriesResponse")
	proto.RegisterType((*ListMonitoredResourceDescriptorsRequest)(nil), "google.logging.v2.ListMonitoredResourceDescriptorsRequest")
	proto.RegisterType((*ListMonitoredResourceDescriptorsResponse)(nil), "google.logging.v2.ListMonitoredResourceDescriptorsResponse")
}

var fileDescriptor1 = []byte{
	// 651 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x53, 0x4f, 0x6f, 0xd3, 0x4e,
	0x10, 0xd5, 0x36, 0x6d, 0x7f, 0xcd, 0xe4, 0x47, 0xff, 0x2c, 0x34, 0x0d, 0x2e, 0x88, 0xd4, 0x05,
	0x35, 0x8d, 0xa8, 0x2d, 0x82, 0x90, 0x50, 0x10, 0x97, 0xaa, 0xb9, 0x05, 0xa9, 0x2a, 0x12, 0x1c,
	0x2d, 0x27, 0x99, 0x5a, 0xa6, 0x8e, 0xd7, 0xec, 0x6e, 0x52, 0x02, 0xe2, 0xc2, 0x05, 0x09, 0x8e,
	0x7c, 0x2b, 0xae, 0x7c, 0x05, 0x3e, 0x00, 0x47, 0x6e, 0xb0, 0xb6, 0xd7, 0x6d, 0xda, 0xb8, 0x4d,
	0xc4, 0x29, 0xf1, 0xec, 0x9b, 0x79, 0x6f, 0x66, 0xde, 0xc0, 0x3d, 0x8f, 0x31, 0x2f, 0x40, 0x3b,
	0x60, 0x9e, 0xe7, 0x87, 0x9e, 0x3d, 0x6c, 0x64, 0x7f, 0xad, 0x88, 0x33, 0xc9, 0xe8, 0x5a, 0x0a,
	0xb0, 0xb2, 0xe8, 0xb0, 0x61, 0xdc, 0xd1, 0x39, 0x6e, 0xe4, 0xdb, 0x6e, 0x18, 0x32, 0xe9, 0x4a,
	0x9f, 0x85, 0x22, 0x4d, 0x30, 0xb6, 0xc7, 0x5e, 0xfb, 0x2c, 0xf4, 0x25, 0xe3, 0xd8, 0x73, 0x38,
	0x0a, 0x36, 0xe0, 0x5d, 0xd4, 0xa0, 0xad, 0x5c, 0x5a, 0x07, 0x43, 0xc9, 0x47, 0x1a, 0xb2, 0xa9,
	0x21, 0xc9, 0x57, 0x67, 0x70, 0x6c, 0x63, 0x3f, 0x92, 0xd9, 0xe3, 0x86, 0x7e, 0xe4, 0x51, 0xd7,
	0x16, 0x8a, 0x7f, 0xa0, 0xd9, 0xcd, 0xfb, 0xb0, 0x7a, 0x80, 0x01, 0x4a, 0x6c, 0x33, 0xef, 0x08,
	0xdf, 0x0e, 0x50, 0x48, 0xba, 0x0a, 0x4b, 0x71, 0xf1, 0xd0, 0xed, 0x63, 0x85, 0x54, 0x49, 0xad,
	0x68, 0xfe, 0x21, 0x50, 0x7e, 0xcd, 0xfd, 0x04, 0xd5, 0x52, 0x9c, 0x3e, 0x8a, 0x2b, 0xc1, 0xd4,
	0x86, 0xa5, 0x4c, 0x7d, 0x65, 0x4e, 0x45, 0x4a, 0x8d, 0xbb, 0x96, 0x1e, 0x8a, 0xea, 0xd1, 0x7a,
	0x91, 0xf5, 0x78, 0xa4, 0x41, 0xb4, 0x05, 0x8b, 0x81, 0xdb, 0xc1, 0x40, 0x54, 0x0a, 0xd5, 0x82,
	0x82, 0x3f, 0xb1, 0x26, 0x66, 0x68, 0xe5, 0xb3, 0x5b, 0xed, 0x24, 0x2f, 0x0e, 0x8e, 0xe8, 0x43,
	0xf8, 0x0f, 0xd3, 0xd7, 0xca, 0x7c, 0x52, 0x67, 0x33, 0xa7, 0x8e, 0x2e, 0x31, 0x32, 0xf6, 0xa0,
	0x34, 0x9e, 0x5c, 0x82, 0xc2, 0x09, 0x8e, 0x74, 0x07, 0x37, 0x60, 0x61, 0xe8, 0x06, 0x83, 0x54,
	0x7e, 0xb1, 0x39, 0xf7, 0x94, 0x98, 0xb7, 0x61, 0x63, 0x42, 0x82, 0x88, 0xd4, 0x16, 0xd1, 0x1c,
	0xc0, 0x7a, 0xdb, 0x17, 0x72, 0x72, 0x34, 0x37, 0xa1, 0xa4, 0x86, 0xfc, 0x06, 0xbb, 0xd2, 0xf1,
	0x7b, 0x42, 0xd5, 0x2e, 0xa8, 0xda, 0xcb, 0xb0, 0x78, 0xec, 0x07, 0x12, 0x79, 0x5a, 0x3c, 0x9e,
	0x1f, 0xe3, 0x3d, 0xe4, 0x4e, 0x67, 0xa4, 0xda, 0x8f, 0x23, 0x6b, 0x50, 0x8c, 0x5c, 0x0f, 0x1d,
	0xe1, 0xbf, 0x47, 0xd5, 0x09, 0xa9, 0x2d, 0x50, 0x0a, 0x90, 0x84, 0x24, 0x3b, 0xc1, 0xb0, 0xb2,
	0x90, 0xec, 0xc4, 0x81, 0xf2, 0x65, 0xda, 0x54, 0xd0, 0xf8, 0x20, 0xc8, 0xd4, 0x41, 0xd0, 0x0d,
	0x58, 0x09, 0xf1, 0x9d, 0x74, 0xc6, 0x08, 0x12, 0x65, 0xe6, 0x21, 0xec, 0xc4, 0x04, 0x13, 0xfb,
	0x3a, 0x40, 0xd1, 0xe5, 0x7e, 0xa4, 0x62, 0x67, 0x9d, 0x5e, 0x90, 0x4c, 0x72, 0x24, 0xa7, 0x15,
	0xbf, 0x10, 0xa8, 0x4d, 0x2f, 0xa9, 0xbb, 0x68, 0xc1, 0xad, 0xcc, 0x46, 0x4e, 0xef, 0xfc, 0x5d,
	0xb7, 0xb4, 0x73, 0xad, 0xa5, 0xce, 0xeb, 0x5d, 0xd9, 0x5e, 0xe3, 0xd7, 0x3c, 0xac, 0xb6, 0xd3,
	0x79, 0xbc, 0x44, 0x3e, 0xf4, 0xbb, 0xf8, 0xaa, 0x41, 0x4f, 0xa1, 0x78, 0x76, 0x0e, 0x74, 0x3b,
	0x67, 0x6c, 0x97, 0x8f, 0xc5, 0x28, 0x67, 0xa0, 0xec, 0xee, 0xac, 0x56, 0x7c, 0x77, 0xe6, 0xde,
	0xa7, 0x1f, 0x3f, 0xbf, 0xcd, 0xed, 0xd4, 0x1f, 0xa8, 0x5b, 0xed, 0xa0, 0x74, 0x1f, 0xd9, 0x1f,
	0xb2, 0x3b, 0x79, 0xae, 0x5d, 0x21, 0xec, 0x7a, 0x7c, 0xc5, 0xea, 0xe7, 0x23, 0xfd, 0x4a, 0x60,
	0xe5, 0x92, 0xc1, 0xe8, 0xee, 0xcc, 0x77, 0x60, 0xd4, 0x67, 0x81, 0x6a, 0xbf, 0x6e, 0x25, 0xca,
	0x36, 0xcd, 0xf2, 0x99, 0x32, 0xed, 0x96, 0xe6, 0x69, 0x9c, 0xd1, 0x24, 0x75, 0xfa, 0x99, 0xc0,
	0xf2, 0x45, 0x73, 0xd1, 0x5a, 0x9e, 0x87, 0xf2, 0x6c, 0x6f, 0xec, 0xce, 0x80, 0xd4, 0x52, 0xaa,
	0x89, 0x14, 0xc3, 0x5c, 0x9f, 0x90, 0x12, 0xa8, 0x84, 0x58, 0xc9, 0x77, 0x02, 0xd5, 0x69, 0x96,
	0xa1, 0xcd, 0x2b, 0x18, 0x67, 0xb0, 0xae, 0xf1, 0xec, 0x9f, 0x72, 0xb5, 0x7e, 0xbd, 0x64, 0x7a,
	0xbe, 0xe4, 0xfe, 0x35, 0x69, 0xfb, 0x75, 0x58, 0xef, 0xb2, 0xfe, 0x24, 0xe1, 0xfe, 0xff, 0xda,
	0x88, 0x87, 0xb1, 0x87, 0x0e, 0xc9, 0x6f, 0x42, 0x3a, 0x8b, 0x89, 0x9f, 0x1e, 0xff, 0x0d, 0x00,
	0x00, 0xff, 0xff, 0x58, 0xd4, 0x67, 0x3e, 0x71, 0x06, 0x00, 0x00,
}
