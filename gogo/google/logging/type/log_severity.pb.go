// Code generated by protoc-gen-gogo.
// source: google/logging/type/log_severity.proto
// DO NOT EDIT!

package google_logging_type

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "go.pedge.io/pb/gogo/google/api"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// The severity of the event described in a log entry.  These guideline severity
// levels are ordered, with numerically smaller levels treated as less severe
// than numerically larger levels. If the source of the log entries uses a
// different set of severity levels, the client should select the closest
// corresponding `LogSeverity` value. For example, Java's FINE, FINER, and
// FINEST levels might all map to `LogSeverity.DEBUG`. If the original severity
// code must be preserved, it can be stored in the payload.
//
type LogSeverity int32

const (
	// The log entry has no assigned severity level.
	LogSeverity_DEFAULT LogSeverity = 0
	// Debug or trace information.
	LogSeverity_DEBUG LogSeverity = 100
	// Routine information, such as ongoing status or performance.
	LogSeverity_INFO LogSeverity = 200
	// Normal but significant events, such as start up, shut down, or
	// configuration.
	LogSeverity_NOTICE LogSeverity = 300
	// Warning events might cause problems.
	LogSeverity_WARNING LogSeverity = 400
	// Error events are likely to cause problems.
	LogSeverity_ERROR LogSeverity = 500
	// Critical events cause more severe problems or brief outages.
	LogSeverity_CRITICAL LogSeverity = 600
	// A person must take an action immediately.
	LogSeverity_ALERT LogSeverity = 700
	// One or more systems are unusable.
	LogSeverity_EMERGENCY LogSeverity = 800
)

var LogSeverity_name = map[int32]string{
	0:   "DEFAULT",
	100: "DEBUG",
	200: "INFO",
	300: "NOTICE",
	400: "WARNING",
	500: "ERROR",
	600: "CRITICAL",
	700: "ALERT",
	800: "EMERGENCY",
}
var LogSeverity_value = map[string]int32{
	"DEFAULT":   0,
	"DEBUG":     100,
	"INFO":      200,
	"NOTICE":    300,
	"WARNING":   400,
	"ERROR":     500,
	"CRITICAL":  600,
	"ALERT":     700,
	"EMERGENCY": 800,
}

func (x LogSeverity) String() string {
	return proto.EnumName(LogSeverity_name, int32(x))
}

func init() {
	proto.RegisterEnum("google.logging.type.LogSeverity", LogSeverity_name, LogSeverity_value)
}
