// Code generated by protoc-gen-gogo.
// source: pb/geo/geo.proto
// DO NOT EDIT!

package pbgeo

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import pb_money "go.pedge.io/pb/gogo/pb/money"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PostalAddress_Direction int32

const (
	PostalAddress_NONE PostalAddress_Direction = 0
	PostalAddress_N    PostalAddress_Direction = 1
	PostalAddress_S    PostalAddress_Direction = 2
	PostalAddress_E    PostalAddress_Direction = 3
	PostalAddress_W    PostalAddress_Direction = 4
	PostalAddress_NE   PostalAddress_Direction = 5
	PostalAddress_SE   PostalAddress_Direction = 6
	PostalAddress_NW   PostalAddress_Direction = 7
	PostalAddress_SW   PostalAddress_Direction = 8
)

var PostalAddress_Direction_name = map[int32]string{
	0: "NONE",
	1: "N",
	2: "S",
	3: "E",
	4: "W",
	5: "NE",
	6: "SE",
	7: "NW",
	8: "SW",
}
var PostalAddress_Direction_value = map[string]int32{
	"NONE": 0,
	"N":    1,
	"S":    2,
	"E":    3,
	"W":    4,
	"NE":   5,
	"SE":   6,
	"NW":   7,
	"SW":   8,
}

func (x PostalAddress_Direction) String() string {
	return proto.EnumName(PostalAddress_Direction_name, int32(x))
}

type Country struct {
	Name         string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Alpha_2Code  CountryAlpha2Code     `protobuf:"varint,2,opt,name=alpha_2_code,proto3,enum=pb.geo.CountryAlpha2Code" json:"alpha_2_code,omitempty"`
	Alpha_3Code  CountryAlpha3Code     `protobuf:"varint,3,opt,name=alpha_3_code,proto3,enum=pb.geo.CountryAlpha3Code" json:"alpha_3_code,omitempty"`
	NumericCode  uint32                `protobuf:"varint,4,opt,name=numeric_code,proto3" json:"numeric_code,omitempty"`
	CurrencyCode pb_money.CurrencyCode `protobuf:"varint,5,opt,name=currency_code,proto3,enum=pb.money.CurrencyCode" json:"currency_code,omitempty"`
}

func (m *Country) Reset()         { *m = Country{} }
func (m *Country) String() string { return proto.CompactTextString(m) }
func (*Country) ProtoMessage()    {}

type LatLng struct {
	LatPicos  int64 `protobuf:"varint,1,opt,name=lat_picos,proto3" json:"lat_picos,omitempty"`
	LongPicos int64 `protobuf:"varint,2,opt,name=long_picos,proto3" json:"long_picos,omitempty"`
}

func (m *LatLng) Reset()         { *m = LatLng{} }
func (m *LatLng) String() string { return proto.CompactTextString(m) }
func (*LatLng) ProtoMessage()    {}

type PostalAddress struct {
	StreetNumber                     uint64                  `protobuf:"varint,1,opt,name=street_number,proto3" json:"street_number,omitempty"`
	StreetNumberPostfix              string                  `protobuf:"bytes,2,opt,name=street_number_postfix,proto3" json:"street_number_postfix,omitempty"`
	StreetName                       string                  `protobuf:"bytes,3,opt,name=street_name,proto3" json:"street_name,omitempty"`
	StreetPreDirection               PostalAddress_Direction `protobuf:"varint,4,opt,name=street_pre_direction,proto3,enum=pb.geo.PostalAddress_Direction" json:"street_pre_direction,omitempty"`
	StreetPostDirection              PostalAddress_Direction `protobuf:"varint,5,opt,name=street_post_direction,proto3,enum=pb.geo.PostalAddress_Direction" json:"street_post_direction,omitempty"`
	StreetTypeAbbreviation           string                  `protobuf:"bytes,6,opt,name=street_type_abbreviation,proto3" json:"street_type_abbreviation,omitempty"`
	SecondaryAddressTypeAbbreviation string                  `protobuf:"bytes,7,opt,name=secondary_address_type_abbreviation,proto3" json:"secondary_address_type_abbreviation,omitempty"`
	SecondaryAddressValue            string                  `protobuf:"bytes,8,opt,name=secondary_address_value,proto3" json:"secondary_address_value,omitempty"`
	LocalityName                     string                  `protobuf:"bytes,9,opt,name=locality_name,proto3" json:"locality_name,omitempty"`
	RegionCode                       string                  `protobuf:"bytes,10,opt,name=region_code,proto3" json:"region_code,omitempty"`
	PostalCode                       string                  `protobuf:"bytes,11,opt,name=postal_code,proto3" json:"postal_code,omitempty"`
	CountryAlpha_2Code               CountryAlpha2Code       `protobuf:"varint,12,opt,name=country_alpha_2_code,proto3,enum=pb.geo.CountryAlpha2Code" json:"country_alpha_2_code,omitempty"`
}

func (m *PostalAddress) Reset()         { *m = PostalAddress{} }
func (m *PostalAddress) String() string { return proto.CompactTextString(m) }
func (*PostalAddress) ProtoMessage()    {}

func init() {
	proto.RegisterType((*Country)(nil), "pb.geo.Country")
	proto.RegisterType((*LatLng)(nil), "pb.geo.LatLng")
	proto.RegisterType((*PostalAddress)(nil), "pb.geo.PostalAddress")
	proto.RegisterEnum("pb.geo.PostalAddress_Direction", PostalAddress_Direction_name, PostalAddress_Direction_value)
}
